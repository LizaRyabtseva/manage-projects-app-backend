generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model person {
  id                               Int                     @id @default(autoincrement())
  name                             String
  email                            String                  @unique
  password                         String
  role                             String?
  imgurl                           String?
  project_personToproject_ownerid  project[]               @relation("personToproject_ownerid")
  projecttopersonmaping            projecttopersonmaping[]
  ticket_personToticket_assignerid ticket[]                @relation("personToticket_assignerid")
  ticket_personToticket_creatorid  ticket[]                @relation("personToticket_creatorid")
  ticket_personToticket_updatedid  ticket[]                @relation("personToticket_updatedid")
}

model project {
  id                             Int                     @id @default(autoincrement())
  title                          String                  @unique
  description                    String
  ownerid                        Int
  person_personToproject_ownerid person                  @relation("personToproject_ownerid", fields: [ownerid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  projecttopersonmaping          projecttopersonmaping[]
  sprint                         sprint[]
}

model sprint {
  id                              Int       @id @default(autoincrement())
  projectid                       Int?
  title                           String
  description                     String?
  datestart                       DateTime? @db.Date
  dateend                         DateTime? @db.Date
  project                         project?  @relation(fields: [projectid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ticket_sprintToticket_backlogid ticket[]  @relation("sprintToticket_backlogid")
  ticket                          ticket[]
}

model ticket {
  id                               Int     @id @default(autoincrement())
  sprintid                         Int?
  backlogid                        Int?
  creatorid                        Int
  assignerid                       Int?
  updatedid                        Int?
  title                            String
  description                      String
  status                           String? @default("todo")
  storypoints                      Int?
  priority                         String? @default("normal")
  person_personToticket_assignerid person? @relation("personToticket_assignerid", fields: [assignerid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sprint_sprintToticket_backlogid  sprint? @relation("sprintToticket_backlogid", fields: [backlogid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  person_personToticket_creatorid  person  @relation("personToticket_creatorid", fields: [creatorid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sprint                           sprint? @relation(fields: [sprintid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  person_personToticket_updatedid  person? @relation("personToticket_updatedid", fields: [updatedid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model projecttopersonmaping {
  id        Int      @id @default(autoincrement())
  projectid Int?
  personid  Int?
  person    person?  @relation(fields: [personid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project   project? @relation(fields: [projectid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
